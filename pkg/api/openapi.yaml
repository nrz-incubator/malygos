openapi: 3.1.0
info:
  title: Malygos API
  description: |
    An API to create Kubernetes clusters on demand on provided Kubernetes
    management clusters.
  contact:
    name: "Loic Blot"
  version: 1.0.0
servers: []
paths:
  # Cluster management
  /v1/clusters:
    post:
      summary: Create a new cluster
      operationId: createCluster
      security:
        - bearerAuth: []
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "201":
          description: Cluster created, returns hydrated cluster
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "400":
          description: Invalid input
          schema:
            $ref: "#/components/schemas/Error"
        "404":
          description: Something not found
          schema:
            $ref: "#/components/schemas/Error"
        "409":
          description: Cluster already exists
    get:
      summary: List all clusters
      operationId: listClusters
      security:
        - bearerAuth: []
        - basic: []
      responses:
        "200":
          description: List of clusters
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cluster"
                  warnings:
                    type: array
                    items:
                      type: string
                required:
                  - clusters
        "404":
          description: No cluster found
  /v1/clusters/{region}/{clusterId}:
    get:
      summary: Get a cluster
      operationId: getCluster
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: clusterId
          in: path
          required: true
          description: Cluster ID
          schema:
            type: string
        - name: region
          in: path
          required: true
          description: Cluster region
          schema:
            type: string
      responses:
        "200":
          description: Cluster found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "404":
          description: Cluster not found
    delete:
      summary: Delete a cluster
      operationId: deleteCluster
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: clusterId
          in: path
          required: true
          description: Cluster ID
          schema:
            type: string
        - name: region
          in: path
          required: true
          description: Cluster region
          schema:
            type: string
      responses:
        "204":
          description: Cluster deleted
        "404":
          description: Cluster not found
  /v1/registrars:
    get:
      summary: List all management clusters
      operationId: listRegistrarClusters
      security:
        - bearerAuth: [cluster_admin]
        - basicAuth: [cluster_admin]
      responses:
        "200":
          description: List of management clusters
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegistrarCluster"
                  warnings:
                    type: array
                    items:
                      type: string
                required:
                  - clusters
        "404":
          description: No management cluster found
    post:
      summary: Create a new management cluster
      operationId: createRegistrarCluster
      security:
        - bearerAuth: [cluster_admin]
        - basicAuth: [cluster_admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrarCluster"
      responses:
        "201":
          description: Management cluster created, returns hydrated management cluster
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrarCluster"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Management cluster already exists

  /v1/registrars/{clusterRegistrarId}:
    get:
      summary: Get a management cluster
      operationId: getRegistrarCluster
      security:
        - bearerAuth: [cluster_admin]
        - basicAuth: [cluster_admin]
      parameters:
        - name: clusterRegistrarId
          in: path
          required: true
          description: Management cluster ID
          schema:
            type: string
      responses:
        "200":
          description: Management cluster found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrarCluster"
        "404":
          description: Management cluster not found
    delete:
      summary: Delete a management cluster
      operationId: deleteRegistrarCluster
      security:
        - bearerAuth: [cluster_admin]
        - basicAuth: [cluster_admin]
      parameters:
        - name: clusterRegistrarId
          in: path
          required: true
          description: Management cluster ID
          schema:
            type: string
      responses:
        "204":
          description: Management cluster deleted
        "404":
          description: Management cluster not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    Kubeconfig:
      type: string
    ClusterStatus:
      type: object
      properties:
        online:
          type: boolean
        phase:
          type: string
      required:
        - online
        - phase
    Cluster:
      type: object
      properties:
        name:
          type: string
        region:
          type: string
        id:
          type: string
        version:
          type: string
        kubeconfig:
          $ref: "#/components/schemas/Kubeconfig"
        status:
          $ref: "#/components/schemas/ClusterStatus"
      required:
        - name
        - region
        - version
    RegistrarCluster:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        region:
          type: string
        kubeconfig:
          type: string
      required:
        - name
        - region
